name: Checking dangling commits by Trufflehog

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      workingOrgs:
        description: 'Comma-separated orgs to scan'
        default: 'axonivy-market'
      workingRepos:
        description: 'Comma-separated list of repo names (optional)'
        default: ''

jobs:
  truffle-scan:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Install TruffleHog v3 (binary)
      #   run: |
      #     curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh \
      #       |sh -s -- -b /usr/local/bin
      #     trufflehog --version
      - name: Install TruffleHog v3 (binary)
        run: |
          curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
          trufflehog --version

      - name: Prepare inputs
        run: |
          echo "ORGS=${{ github.event.inputs.workingOrgs || 'axonivy-market' }}" >> $GITHUB_ENV
          echo "REPOS=${{ github.event.inputs.workingRepos || '' }}" >> $GITHUB_ENV

      - name: Run TruffleHog scan
        run: |
          IFS=',' read -ra ORG_LIST <<< "$ORGS"
          mkdir -p trufflehog-reports

          for ORG in "${ORG_LIST[@]}"; do
            echo "🔍 Fetching repos from $ORG"

            if [ -n "$REPOS" ]; then
              IFS=',' read -ra REPO_LIST <<< "$REPOS"
            else
              mapfile -t REPO_LIST < <(gh repo list "$ORG" --limit 1000 --json name -q '.[].name')
            fi

            echo "📦 Found ${#REPO_LIST[@]} repositories in $ORG"
            for REPO in "${REPO_LIST[@]}"; do
              echo "🚨 Scanning $ORG/$REPO ..."
              rm -rf "$REPO"

              REPO_URL="https://github.com/$ORG/$REPO.git"
              REPORT_JSON="trufflehog-reports/${ORG}__${REPO}.json"

              trufflehog git "$REPO_URL" --json > "$REPORT_JSON" || echo "⚠️ Scan failed for $REPO_URL"
            done
          done

      - name: Convert TruffleHog JSON reports to CSV (safe version)
        run: |
          mkdir -p trufflehog-csv

          for report in trufflehog-reports/*.json; do
            csv_file="trufflehog-csv/$(basename "${report%.json}.csv")"
            echo '"branch","commitMessage","commitHash","date","filePath","reason","stringsFound","diff"' > "$csv_file"

            jq -c '.[] | select(type == "object")' "$report" | while IFS= read -r item; do
              echo "$item" | jq -r '[
                (.branch // ""),
                ((.commit // "") | gsub("[\n\r]"; " ")),
                (.commitHash // ""),
                (.date // ""),
                (.path // ""),
                (.reason // ""),
                ((.stringsFound // []) | join(" | ")),
                ((.diff // "") | gsub("[\n\r]"; " "))
              ] | @csv' >> "$csv_file"
            done
          done


          echo "✅ TruffleHog scanning complete!"

      - name: Upload TruffleHog JSON Reports
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-reports
          path: trufflehog-reports/

      - name: Upload TruffleHog CSV Reports
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-csv
          path: trufflehog-csv/
