name: Checking dangling commits by Trufflehog

on:
  workflow_dispatch:
    inputs:
      workingOrgs:
        description: 'Comma-separated orgs to scan'
        default: 'axonivy-market'
      workingRepos:
        description: 'Comma-separated list of repo names (optional)'
        default: ''

jobs:
  truffle-scan:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout (for workflow context)
        uses: actions/checkout@v4

      - name: Install TruffleHog
        run: pip install trufflehog

      - name: Run TruffleHog scanning
        run: |
          IFS=',' read -ra ORG_LIST <<< "${{ github.event.inputs.workingOrgs }}"
          REPOS="${{ github.event.inputs.workingRepos }}"
          DRY_RUN="${{ github.event.inputs.dryRun }}"
          mkdir -p trufflehog-reports
          CSV_REPORT="trufflehog-reports/check-commits-report.csv"
          echo "org,repo,path,branch,commit,time,reason,stringsFound" > "$CSV_REPORT"

          for ORG in "${ORG_LIST[@]}"; do
            echo "üîç Fetching repos from $ORG"

            if [ -n "$REPOS" ]; then
              IFS=',' read -ra REPO_LIST <<< "$REPOS"
            else
              mapfile -t REPO_LIST < <(gh repo list "$ORG" --limit 1000 --json name -q '.[].name')
            fi

            echo "üì¶ Found ${#REPO_LIST[@]} repositories in $ORG"
            for REPO in "${REPO_LIST[@]}"; do
              echo "üö® Scanning $ORG/$REPO ..."
               rm -rf "$REPO"
              REPO_URL="https://github.com/$ORG/$REPO.git"
              REPORT="trufflehog-reports/${ORG}__${REPO}.json"

              trufflehog --json "$REPO_URL" > "$REPORT" || true
              # Convert JSON to CSV format
              if [ -s "$REPORT" ] && [ "$(jq length "$REPORT")" -gt 0 ]; then
                jq -r --arg org "$ORG" --arg repo "$REPO" '
                  .[] | [
                    $org,
                    $repo,
                    .path,
                    .branch,
                    .commit,
                    .date,
                    .reason,
                    (.stringsFound | join(";"))
                  ] | @csv' "$REPORT" >> "$CSV_REPORT"
              else
                echo "‚ÑπÔ∏è No findings in $ORG/$REPO"
              fi
            done
          done
          echo "‚úÖ TruffleHog scanning complete!"

      - name: Upload TruffleHog Reports
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-reports
          path: trufflehog-reports/